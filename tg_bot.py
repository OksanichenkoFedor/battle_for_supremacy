import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

bot = telebot.TeleBot("7947796403:AAGIFYeh-VGlN3f-guPPBMg2APV1tAQyEDU", parse_mode=None)
ids_colors = {}


# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ (—Ç–µ –∂–µ —á—Ç–æ –∏ –≤ Pygame)
HEX_COLORS = [
    "üî¥ –ö—Ä–∞—Å–Ω—ã–π",
    "üü¢ –°–∞–ª–∞—Ç–æ–≤—ã–π",
    "üü£ –§–∏–æ–ª–µ—Ç–æ–≤—ã–π",
    "üîµ –°–∏–Ω–∏–π",
    "üü† –û—Ä–∞–Ω–∂–µ–≤—ã–π",
    "ü©µ –ë–∏—Ä—é–∑–æ–≤—ã–π"
]


# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ü–≤–µ—Ç–æ–≤
def create_color_keyboard():
    markup = InlineKeyboardMarkup()
    markup.row_width = 2  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ

    buttons = []
    for i, color in enumerate(HEX_COLORS):
        buttons.append(InlineKeyboardButton(color, callback_data=f"color_{i}"))

    # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ —Å—Ç—Ä–æ–∫–∞–º (–ø–æ 2 –≤ –∫–∞–∂–¥–æ–π)
    for i in range(0, len(buttons), 2):
        if i + 1 < len(buttons):
            markup.add(buttons[i], buttons[i + 1])
        else:
            markup.add(buttons[i])

    return markup


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = """
    –í—ã–±–µ—Ä–µ—Ç–µ —Ü–≤–µ—Ç –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã

    –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤:
    """
    bot.send_message(
        message.chat.id,
        welcome_text,
        reply_markup=create_color_keyboard()
    )
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def handle_color_selection(call):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä —Ü–≤–µ—Ç–∞ –∏–∑ callback_data
    if call.data.startswith("color_"):
        color_index = int(call.data.split("_")[1])
        color_name = HEX_COLORS[color_index]

        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å
        print(f"=== –í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ ===")
        print(f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {call.from_user.id}")
        print(f"–ò–º—è: {call.from_user.first_name}")
        print(f"–§–∞–º–∏–ª–∏—è: {call.from_user.last_name}")
        print(f"Username: @{call.from_user.username}")
        print(f"–ù–æ–º–µ—Ä –∫–Ω–æ–ø–∫–∏: {color_index}")
        print(f"–¶–≤–µ—Ç: {color_name}")
        print("=" * 30)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.answer_callback_query(
            call.id,
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {color_name}",
            show_alert=False
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        bot.send_message(
            call.message.chat.id,
            f"üéâ –û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏: {color_name}\n"
            f"üìù –ù–æ–º–µ—Ä –∫–Ω–æ–ø–∫–∏: {color_index}\n"
            f"üÜî –í–∞—à ID: {call.from_user.id}"
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
@bot.message_handler(content_types=['text'])
def handle_text_messages(message):
    if message.text != '/start':
        bot.reply_to(
            message,
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞"
        )

'''
@bot.message_handler(content_types=['text'])
def handle_text_messages(message):
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
    print(f"=== –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ===")
    print(f"–í—Ä–µ–º—è: {message.date}")
    print(f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}")
    print(f"–ò–º—è: {message.from_user.first_name}")
    print(f"–§–∞–º–∏–ª–∏—è: {message.from_user.last_name}")
    print(f"Username: @{message.from_user.username}")
    print(f"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {message.text}")
    print("=" * 30)
'''
bot.polling()